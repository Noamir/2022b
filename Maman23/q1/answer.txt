***
צירפתי גם תמונה של הטקסט בצורה מיושרת וקריאה יותר
התוכנה מבלגנת את התצוגה של טקסט בעברית
***

1 .א. "ניתן לשנות את תחום הגדרת האינדקסים של מערך. ברירת המחדל הוא אינדקסים החל מאינדקס 0, אך ניתן לשנות זאת לאינדקסים החל מאינדקס 1."
תשובה: תמיד אינו נכון
הסבר: 
בשפת C אינדקסים מתחילים תמיד מ-0 ולא ניתן לשנות זאת.
ניתן לראות בספר, עמוד 22, פסקה אחרונה:
"Array subscripts always start at zero in C"

אפשר להסביר זאת גם בכך שב-C,  מערך הוא בעצם הצבעה למקום מסוים בזיכרון. המקום הזה בזיכרון תמיד מתחיל במיקום מסוים - זה המקום ה-0 - לא ניתן לדלג עליו. אליו נגיע כאשר נפנה לאינדקס 0 במערך.
אם נקצה זיכרון ממקום / תא אחר - הוא יהיה המקום ה-0 שלנו. אפשר אולי לפנות לתאים מתקדמים יותר שמוקצים, אבל תא 0 תמיד יהיה מוגדר והוא יהיה הראשון.

1. ב. "שדה סיביות (bit fields) יכול להיות בעל 8 שדות לכל היותר."
תשובה: לפעמים נכון ולפעמים אינו נכון
הסבר: 
ב-C ניתן להגדיר גודל בביטים ל - structure and union members.
ניתן להגדיר לשדה ספציפי את מספר הביטים שהוא מיועד להשתמש בהם.
כמות השדות שניתן להגדיר ב-structure  לא מוגבלת אבל רוחב כל שדה לא יכול לעלות על הsizeof  של הסוג שלו.
סוגי המשתנים שניתן להגדיר זאת עבורם הם: int, signed int, or unsigned int
כבר מכאן ניתן להבין שהשדות הללו יכולים להיות בעלי יותר מ-8 סיביות - כל הסוגים האלו הם בעלי 16 או 32 ביטים - תלוי במערכת ההפעלה. למשל:
int example : 14;
עם זאת - אם נגדיר לשדה מסוים גודל של 8 ביטים, למשל:
int example : 8;
הוא יתפקד כ "מספר קטן" ז"א int בעל 8 ביטים בלבד - במקרה כזה המשפט הנתון נכון.
לכן - המשפט לפעמים נכון ולפעמים אינו נכון.

* התבססתי על עמודים 149-150 בספר
